@page "/empleados/indexEmpleado"


@using Practica6.Models

@using Practica6.Data.Services

@inject IEmpleadosService EmpleadosService


<div class="d-flex col justify-content-between">
    <h1>Lista de empleados</h1>
    <a href="/empleados/crearEmpleado" class="btn btn-primary"><i>Crear</i></a>
</div>

<div class="row">
    @if (ListaEmpleados.Count > 0)
    {
        <table id="mi_tabla" class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Folio</th>
                    <th scope="col">Ingreso</th>
                    <th scope="col">Departamento</th>
                    <th scope="col">Nombre</th>
                    <th scope="col">Apellido</th>
                    <th scope="col">Email</th>
                    <th scope="col">Funcion</th>
                    <th scope="col">Baja</th>
                    <th scope="col">Sueldo</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListaEmpleados)
                {
                    <tr>
                        <td scope="row">@item.IntId</td>
                        <td>@item.IntFolio</td>
                        <td>@item.DatIngreso</td>
                        <td>@item.StrDepartamento</td>
                        <td>@item.StrNombre</td>
                        <td>@item.StrApellido</td>
                        <td>@item.StrEmail</td>
                        <td>@item.StrFuncion</td>
                        <td>@item.DatBaja</td>
                        <td>@item.IntSueldo</td>
                        <td></td>
                        <td>
                            <a class="btn btn-primary mr-2" href="/empleados/edit/@item.IntId" role="button">Editar</a>
                            <button class="btn btn-danger mr-2" @onclick="@(e => BorrarEmpleado(item.IntId))">Borrar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

</div>

@code {
    //Se recibe el listado de empleados y le pondremos el nombre ListaEmpleados
    private List<Empleado> ListaEmpleados = new List<Empleado>();
    private Empleado empleado { get; set; }

    //Para obtener los datos del repositorio services utilizamos el metodo
    //AbandonedMutexException que se ejecuta en cuanto se entra al componente
    //lo volvemos async
    protected override async Task OnInitializedAsync()
    {
        ListaEmpleados = await EmpleadosService.ObtenerTodos();
    }

    private async Task BorrarEmpleado(int id)
    {
        var empleadoAux = await EmpleadosService.ObtenerId(id);
        if (empleadoAux != null)
        {
            await EmpleadosService.Eliminar(empleadoAux);
        }
    }
}
